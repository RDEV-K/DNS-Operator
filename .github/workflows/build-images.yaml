name: Build and Publish Images

on:
  push:
    branches:
      - main
      - "release-*"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:

env:
  IMG_TAGS: ${{ github.sha }} ${{ github.ref_name }}
  IMG_REGISTRY_HOST: quay.io
  IMG_REGISTRY_ORG: kuadrant
  IMG_REGISTRY_REPO: dns-operator
  MAIN_BRANCH_NAME: main
  OPERATOR_NAME: dns-operator

jobs:
  build:
    name: Build and Push image
    runs-on: ubuntu-latest
    outputs:
      build-tags: ${{ steps.build-image.outputs.tags }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Add latest tag
        if: ${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        id: add-latest-tag
        run: |
          echo "IMG_TAGS=latest ${{ env.IMG_TAGS }}" >> $GITHUB_ENV

      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.OPERATOR_NAME }}
          tags: ${{ env.IMG_TAGS }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            GIT_SHA=${{ github.sha }}
            DIRTY=false

          dockerfiles: |
            ./Dockerfile

      - name: Print Build Info
        run: echo "Image = ${{ steps.build-image.outputs.image }}, Tags = ${{ steps.build-image.outputs.tags }}"

      - name: Push Image
        if: github.repository_owner == 'kuadrant'
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}

      - name: Print Image URL
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-bundle:
    name: Build and Push bundle image
    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      build-tags: ${{ steps.build-image.outputs.tags }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install yq tool
        run: |
          # following sub-shells running make target should have yq already installed
          make yq
      - name: Read operator image reference URL from the manifest bundle
        id: operator-image-url
        run: |
          url=`make bundle-operator-image-url`
          echo url=$url >> $GITHUB_OUTPUT
      - name: Read operator image reference tag from the manifest bundle
        id: operator-image-tag
        run: |
          tag=`make bundle-operator-image-tag`
          echo tag=$tag >> $GITHUB_OUTPUT
      - name: Verify referenced operator image has previously been built
        # Only check on tags. On (release) branches, the branch name may not match referenced tag in CSV.
        # For (release) branches, the workflow builds operator image tags with sha and branch name.
        if: ${{ startsWith(github.ref, 'refs/tags/') && ! contains(needs.build.outputs.build-tags, steps.operator-image-tag.outputs.tag) }}
        run: exit 1

      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.OPERATOR_NAME }}-bundle
          tags: ${{ needs.build.outputs.build-tags }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            GIT_SHA=${{ github.sha }}
            DIRTY=false
          dockerfiles: |
            ./bundle.Dockerfile

      - name: Print Build Info
        run: echo "Image = ${{ steps.build-image.outputs.image }}, Tags = ${{ steps.build-image.outputs.tags }}, Operator IMG = ${{ steps.operator-image-url.outputs.url }}"

      - name: Push Image
        if: github.repository_owner == 'kuadrant'
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}

      - name: Print Image URL
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-catalog:
    name: Build and Push catalog image
    needs: [build, build-bundle]
    runs-on: ubuntu-latest
    outputs:
      build-tags: ${{ steps.build-image.outputs.tags }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install yq tool
        run: |
          # following sub-shells running make target should have yq already installed
          make yq
      - name: Read operator bundle image reference
        id: operator-bundle
        run: |
          image=`make print-bundle-image`
          echo image=$image >> $GITHUB_OUTPUT
      - name: Verify referenced bundle has previously been built
        if: ${{ ! contains(needs.build-bundle.outputs.build-tags, steps.operator-bundle.outputs.image) }}
        run: exit 1
      - name: Run make catalog-build
        run: make catalog-build
      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.OPERATOR_NAME }}-catalog
          tags: ${{ needs.build.outputs.build-tags }}
          platforms: linux/amd64,linux/arm64
          context: ./tmp/catalog
          dockerfiles: |
            ./tmp/catalog/index.Dockerfile

      - name: Print Build Info
        run: echo "Image = ${{ steps.build-image.outputs.image }}, Tags = ${{ steps.build-image.outputs.tags }}, Bundle IMG = ${{ steps.operator-bundle.outputs.image }}"

      - name: Push Image
        if: github.repository_owner == 'kuadrant'
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}

      - name: Print Image URL
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
  verify-builds:
    name: Ensure all image references are equal (operator, bundle, catalog)
    needs: [build, build-bundle, build-catalog]
    runs-on: ubuntu-latest
    steps:
      - name: Verify bundle and operator image tags match
        if: ${{ needs.build.outputs.build-tags != needs.build-bundle.outputs.build-tags }}
        run: exit 1
      - name: Verify catalog and bundle tags match
        if: ${{ needs.build-bundle.outputs.build-tags != needs.build-catalog.outputs.build-tags }}
        run: exit 1
